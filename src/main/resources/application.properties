#configuration de la datasource
#server.port==8080
spring.datasource.initialization-mode=always
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/gestionrh?useSSl=false&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=

#configuration JPA/Hibernate
#dialect : classe permettant de traduire les requêtes vers le SQL spécifique au SGBD utilisé
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#stratégie utilisée pour générer les tables en Bdd 
spring.jpa.hibernate.ddl-auto=update
#create-drop => pour la création des bases de données, mais attention, ça fait disparaitre les données.
#update => Ajoute les éléments, ne supprime pas les données. (Bien pour le dev, mais pour la prod on ne met rien.)

#configuration des logs
#TODO : mettre à false en production
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.open-in-view=true

 #Monitoring du service
#en ajoutant Spring Actuator, voir dependency dans le pom.xml
#management.server.port=8090
#management.endpoints.web.exposure.include=*
#actuator vous définira les URLs accessibles ici : http://localhost:8080/actuator


#app properties
#app.storagefolder=C:/Users/Stagiaire/Pictures/
#jwt.secret=myapisecretkey123
#jwt.get.token.uri=/authenticate

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=10MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
